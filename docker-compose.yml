version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: wordpecker-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: wordpecker
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_dev:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - wordpecker-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: wordpecker-backend-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URL=mongodb://admin:password@mongodb:27017/wordpecker?authSource=admin
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_BASE_URL=${OPENAI_BASE_URL:-https://api.openai.com/v1}
      - ELEVENLABS_API_KEY=${ELEVENLABS_API_KEY}
      - PEXELS_API_KEY=${PEXELS_API_KEY}
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - wordpecker-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/lists"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wordpecker-frontend-dev
    restart: unless-stopped
    environment:
      - VITE_API_URL=http://localhost:3000
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - wordpecker-network

volumes:
  mongodb_data_dev:

networks:
  wordpecker-network:
    driver: bridge